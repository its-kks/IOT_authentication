classdef leo_satellite < handle
    properties
        x
        y
        matlab_sat
        group_key
        network_manager
        sc
        random
        coordinates
        ind
        times
    end
    
    methods
        % Constructor
        function obj = leo_satellite(x,y,sc,semiMajorAxis,eccentricity,...
                inclination, ...
                RAAN, ...
                argumentOfPerigee, ...
                trueAnomaly, ...
                nameSat,ind,times)
            obj.x = x;
            obj.y = y;
            obj.matlab_sat = satellite(sc, ...
                    semiMajorAxis, ...
                    eccentricity, ...
                    inclination, ...
                    RAAN, ...
                    argumentOfPerigee, ...
                    trueAnomaly, ...
                    "Name",nameSat, ...
                    "OrbitPropagator","two-body-keplerian");
            obj.group_key = -1;
            obj.network_manager = -1;
            obj.sc = sc;
            obj.random = -1;
            obj.coordinates = cell(1,1);
            obj.ind = ind;
            obj.times = times;

        end
        % Group key agreement request
        function  send_gkey_generate_data(obj,network_manager,geo_satellites)
            obj.times.leo_ind = obj.times.leo_ind + 1;
            tic_xiyi_proc = tic;

            random_val = randi([10,99]);
            obj.random = random_val;
            time_stamp = obj.sc.SimulationTime;
            
            % calculating hash value
            hash_val = Hash_bits_to_Z(num2str(random_val) ,num2str(obj.matlab_sat.ID) ,num2str(obj.x) , ...
                char(time_stamp));

            obj.times.xiyi_to_NMC_proc(obj.times.leo_ind) = toc(tic_xiyi_proc);

            
            % papcket generation and sending data
            tic_xiyi_packet = tic;
            message = strcat(hash_val,num2str(obj.matlab_sat.ID),num2str(obj.x), char(time_stamp));
            [received_message,no_of_packets] = Simulate_Data_Send(message,4);
            packet_gen_time = toc(tic_xiyi_packet);
            obj.times.xiyi_to_NMC_packet(obj.times.leo_ind) = packet_gen_time;

            obj.times.xiyi_to_NMC_trans_geo(obj.times.leo_ind) = Transmission_Time(network_manager.ecef, ...
                states(geo_satellites(network_manager.nearest_geo),network_manager.sc.SimulationTime,"CoordinateFrame","ecef"),packet_gen_time);
            obj.times.xiyi_to_GEO_trans_leo(obj.times.leo_ind) = Transmission_Time(states(obj.matlab_sat,network_manager.sc.SimulationTime,"CoordinateFrame","ecef"), ...
                states(geo_satellites(network_manager.nearest_geo),network_manager.sc.SimulationTime,"CoordinateFrame","ecef"),packet_gen_time);

            
            message_to_nm = {hash_val,obj.matlab_sat.ID,random_val,time_stamp};
            network_manager.rand_values = vertcat(network_manager.rand_values,message_to_nm);
            
        end
        % form group_key after receiving coordinates_p
        function form_key(obj,coordinates_p)
            obj.times.leo_ind_key = obj.times.leo_ind_key + 1;

            tic_group_key_derive = tic;
            coordinates_p(1,1) = obj.x;
            coordinates_p(1,2) = obj.y + obj.random;
            obj.coordinates = coordinates_p;
            coefficients = find_coff_nm(coordinates_p);
            first = coefficients{1,1};

            obj.group_key = first.numerator;
            
            obj.times.gk_retrieval_time(obj.times.leo_ind_key) = toc(tic_group_key_derive);

            disp(['Group key generated by LEO ',num2str(obj.ind)])
            disp(obj.group_key)
            
        end
        
        
    end
end




